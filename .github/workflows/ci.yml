name: CI - Test Runner

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

jobs:
  ci:
    name: CI SwEntApp
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: API Key Setup
        run: |
          echo MAPS_API_KEY="${{ secrets.MAPS_API_KEY }}" >> ./secrets.properties

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

#      - name: Cache Gradle
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

# TODO: fix caching node modules
#      - name: Cache Node modules
#        uses: actions/cache@v2
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-


      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      # Remove the "#" if you want to enforce the formatting check when pushing on your repo
      #- name: KTFmt Check
      #  run: |
      #    # To run the CI with debug informations, add --info
      #    ./gradlew ktfmtCheck

      - name: Start Firebase Emulator
        run: |
          firebase emulators:start --only firestore,auth,storage --project=dummy-project-id &

      - name: Assemble and Lint
        run: ./gradlew assembleDebug lint --parallel --build-cache

      - name: Run tests
        run: ./gradlew check --parallel --build-cache

      - name: Run Connected Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          avd-name: github
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew connectedCheck


      - name: Stop Firebase Emulator
        if: always()
        run: pkill -f "firebase" || true

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload report to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache